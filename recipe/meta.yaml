{% set name = "MintPy" %}
{% set version = "1.5.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/insarlab/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 5beb743f09f82121896fb65260110d4d2afbd8b04491cdf95e2ed5c10e3cfe64

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install .[cli] -vv
  entry_points:
    - mintpy = mintpy.__main__:main
    - add_attribute.py = mintpy.add_attribute:main
    - add.py = mintpy.add:main
    - asc_desc2horz_vert.py = mintpy.asc_desc2horz_vert:main
    - bulk_plate_motion.py = mintpy.bulk_plate_motion:main
    - closure_phase_bias.py = mintpy.closure_phase_bias:main
    - dem_error.py = mintpy.dem_error:main
    - dem_gsi.py = mintpy.dem_gsi:main
    - diff.py = mintpy.diff:main
    - generate_mask.py = mintpy.generate_mask:main
    - geocode.py = mintpy.geocode:main
    - ifgram_inversion.py = mintpy.ifgram_inversion:main
    - image_math.py = mintpy.image_math:main
    - image_stitch.py = mintpy.image_stitch:main
    - info.py = mintpy.info:main
    - iono_tec.py = mintpy.iono_tec:main
    - load_data.py = mintpy.load_data:main
    - load_gbis.py = mintpy.load_gbis:main
    - local_oscilator_drift.py = mintpy.local_oscilator_drift:main
    - lookup_geo2radar.py = mintpy.lookup_geo2radar:main
    - mask.py = mintpy.mask:main
    - modify_network.py = mintpy.modify_network:main
    - multilook.py = mintpy.multilook:main
    - multi_transect.py = mintpy.multi_transect:main
    - plot_coherence_matrix.py = mintpy.plot_coherence_matrix:main
    - plot_network.py = mintpy.plot_network:main
    - plot_transection.py = mintpy.plot_transection:main
    - prep_aria.py = mintpy.prep_aria:main
    - prep_cosicorr.py = mintpy.prep_cosicorr:main
    - prep_fringe.py = mintpy.prep_fringe:main
    - prep_gamma.py = mintpy.prep_gamma:main
    - prep_gmtsar.py = mintpy.prep_gmtsar:main
    - prep_hyp3.py = mintpy.prep_hyp3:main
    - prep_isce.py = mintpy.prep_isce:main
    - prep_roipac.py = mintpy.prep_roipac:main
    - prep_snap.py = mintpy.prep_snap:main
    - reference_date.py = mintpy.reference_date:main
    - reference_point.py = mintpy.reference_point:main
    - remove_hdf5_dataset.py = mintpy.remove_hdf5_dataset:main
    - remove_ramp.py = mintpy.remove_ramp:main
    - s1ab_range_bias.py = mintpy.s1ab_range_bias:main
    - save_gbis.py = mintpy.save_gbis:main
    - save_gdal.py = mintpy.save_gdal:main
    - save_gmt.py = mintpy.save_gmt:main
    - save_hdfeos5.py = mintpy.save_hdfeos5:main
    - save_kite.py = mintpy.save_kite:main
    - save_kmz.py = mintpy.save_kmz:main
    - save_kmz_timeseries.py = mintpy.save_kmz_timeseries:main
    - save_qgis.py = mintpy.save_qgis:main
    - save_roipac.py = mintpy.save_roipac:main
    - smallbaselineApp.py = mintpy.smallbaselineApp:main
    - solid_earth_tides.py = mintpy.solid_earth_tides:main
    - spatial_average.py = mintpy.spatial_average:main
    - spatial_filter.py = mintpy.spatial_filter:main
    - subset.py = mintpy.subset:main
    - temporal_average.py = mintpy.temporal_average:main
    - temporal_derivative.py = mintpy.temporal_derivative:main
    - temporal_filter.py = mintpy.temporal_filter:main
    - timeseries2velocity.py = mintpy.timeseries2velocity:main
    - timeseries_rms.py = mintpy.timeseries_rms:main
    - tropo_gacos.py = mintpy.tropo_gacos:main
    - tropo_phase_elevation.py = mintpy.tropo_phase_elevation:main
    - tropo_pyaps3.py = mintpy.tropo_pyaps3:main
    - tsview.py = mintpy.tsview:main
    - unwrap_error_bridging.py = mintpy.unwrap_error_bridging:main
    - unwrap_error_phase_closure.py = mintpy.unwrap_error_phase_closure:main
    - view.py = mintpy.view:main

requirements:
  host:
    - python >=3.6
    - pip
  run:
    - python >=3.6
    - argcomplete
    - cartopy
    - cvxopt
    - dask >=1.0
    - dask-jobqueue >=0.3
    - defusedxml
    - h5py
    - joblib
    - lxml
    - matplotlib-base
    - numpy
    - pip
    - pre-commit
    - pyproj
    - rich
    - scikit-image
    - scipy
    - pykml >=0.2
    - pysolid
    - pyaps3 >=0.3
    - gdal >=3
    - pyresample

test:
  imports:
    - mintpy
  requires:
    - pip
  commands:
    - pip check
    - mintpy --help
    - mintpy smallbaselineApp --help
    - smallbaselineApp.py --help
    - view.py --help
    - tsview.py --help
    - info.py --help

about:
  home: https://github.com/insarlab/mintpy
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: Miami INsar Time-series software in PYthon
  description: |
    The Miami INsar Time-series software in PYthon (MintPy as /mɪnt paɪ/) is an
    open-source package for Interferometric Synthetic Aperture Radar (InSAR)
    time series analysis. It reads the stack of interferograms (coregistered and
    unwrapped) in ISCE, ARIA, FRInGE, HyP3, GMTSAR, SNAP, GAMMA or ROI_PAC format,
    and produces three dimensional (2D in space and 1D in time) ground surface
    displacement in line-of-sight direction. It includes a routine time series
    analysis (smallbaselineApp.py) and some independent toolbox.
  doc_url: https://mintpy.readthedocs.io
  dev_url: https://github.com/insarlab/mintpy

extra:
  recipe-maintainers:
    - jhkennedy
    - jlrine2
    - yunjunz
